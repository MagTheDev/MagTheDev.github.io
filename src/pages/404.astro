---
import Layout from "../layouts/Layout.astro";

---

<Layout title="404">
    <div class="container">
        <h1 class="large grad">404</h1>
        <h2 class="large">NOT FOUND</h2>
        <h3 class="home">HOME</h3>
    </div>
    <div class="container">
        <canvas id="canvas"></canvas>
    </div>
</Layout>

<style>
    .container {
        position: absolute;
        top: 0;
        left: 0;

        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        height: 100vh;
        width: 100vw;
    }
    .large {
        font-size: 7rem;
        font-family: 'Space Mono', monospace;
        margin: 0;
    }
    .home {
        font-size: 2rem;
        font-family: 'Space Mono', monospace;
        margin: 0;
        color: var(--color-turquiose)
    }
</style>

<script>
    import * as THREE from 'three';
    import { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js';
    import { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js';
    import { OutputPass } from 'three/examples/jsm/postprocessing/OutputPass.js';

    var material, mesh;

    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );
    const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('canvas')!, antialias: true});

    renderer.setSize( window.innerWidth, window.innerHeight );
    renderer.setPixelRatio( window.devicePixelRatio );

    const composer = new EffectComposer( renderer );
    
    document.body.appendChild( renderer.domElement );

    const renderPass = new RenderPass( scene, camera );
    const outputPass = new OutputPass();
    composer.addPass( renderPass );
    composer.addPass( outputPass );

    material = new THREE.MeshBasicMaterial( { color: 0xffffff, wireframe: true } )
    mesh = new THREE.Mesh(new THREE.IcosahedronGeometry( 20, 1 ), material);

    scene.add( mesh );

    camera.position.z = 60;
    camera.position.x = 2;
    camera.position.y = 4;
    
    function animate() {
        requestAnimationFrame( animate );

        mesh.rotation.x += 0.001;
        mesh.rotation.y += 0.001;
        mesh.rotation.z += 0.001;

        composer.render();
    }
    animate();
</script>

